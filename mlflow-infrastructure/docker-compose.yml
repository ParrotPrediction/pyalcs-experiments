services:
  db:
    restart: always
    image: mysql/mysql-server:5.7.28
    container_name: mlflow-mysql
    expose:
      - "3306"
    ports:
      - "3306:3306"
    networks:
      - mlflow-backend
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    volumes:
      - './mysql/mysqld.cnf:/etc/mysqld.cnf'
      - dbdata:/var/lib/mysql

  server:
    restart: always
    build:
      context: server
      dockerfile: Dockerfile
    container_name: mlflow-server
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "5000"
    networks:
      - mlflow-backend
      - mlflow-frontend
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root ${AWS_S3_BUCKET} --host 0.0.0.0

  nginx:
    restart: always
    build:
      context: nginx
      dockerfile: Dockerfile
    container_name: mlflow-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/mlflow.conf:/etc/nginx/sites-enabled/mlflow.conf
    networks:
      - mlflow-frontend
    depends_on:
      - server

networks:
  mlflow-backend:
    driver: bridge
  mlflow-frontend:
    driver: bridge

volumes:
  dbdata:
